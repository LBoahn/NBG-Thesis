@using MudBlazor;
@using System.ComponentModel.DataAnnotations

<MudGrid Justify=Justify.Center Class="center" Style="height: 88%;">
    <MudItem lg=7>
        <MudForm @ref="visitorForm">
            <MudGrid Justify=Justify.Center Style="text-align: center;">
                <MudItem xs=12 Class="mb-6">
                    <MudText Typo="Typo.h2">@Loc["VisitorRegistration"]</MudText>
                </MudItem>
                <MudItem xs=6>
                    <MudTextField T="string" @bind-Value="FormData.FirstName" Label=@Loc["FirstName"] Variant=Variant.Outlined Required="true" RequiredError=@Loc["Required"] />
                </MudItem>
                <MudItem xs=6>
                    <MudTextField T="string" @bind-Value="FormData.LastName" Label=@Loc["LastName"] Variant=Variant.Outlined Required="true" RequiredError=@Loc["Required"] />
                </MudItem>
                <MudItem xs=12>
                    <MudTextField T="string" @bind-Value="FormData.PhoneNumber" Label=@Loc["PhoneNumber"] Variant=Variant.Outlined Required="true" Validation="@(new PhoneAttribute() {ErrorMessage = @Loc["WrongPhone"]})" />
                </MudItem>
                <MudItem xs=12>
                    <MudTextField T="string" @bind-Value="FormData.Email" Label=@Loc["Email"] Variant=Variant.Outlined Validation="@(new EmailAddressAttribute() {ErrorMessage = @Loc["WrongEmail"]})" />
                </MudItem>
                <MudItem xs=12>
                    <MudTextField T="string" @bind-Value="FormData.Company" Label=@Loc["Company"] Variant=Variant.Outlined Required="true" RequiredError=@Loc["Required"] />
                </MudItem>
                <MudItem xs=12>
                    <MudTextField T="string" @bind-Value="FormData.ContactPerson" Label=@Loc["ContactPerson"] Variant=Variant.Outlined Required="true" RequiredError=@Loc["Required"] />
                </MudItem>
            </MudGrid>
        </MudForm>
    </MudItem>
</MudGrid>

<footer class="footer">
	<MudGrid Justify=Justify.Center>
		<MudItem lg=2 Class="center">
			<MudButton OnClick=@(async () => await OnBack.InvokeAsync()) Size=Size.Large Variant=Variant.Filled Color=Color.Secondary StartIcon=@Icons.Outlined.ArrowBack>@Loc["Back"]</MudButton>
		</MudItem>
		<MudItem lg=4/>
		<MudItem lg=2 Class="center">
			<MudButton OnClick=Validate Size=Size.Large Variant=Variant.Filled Color=Color.Secondary EndIcon=@Icons.Outlined.ArrowForward>@Loc["Next"]</MudButton>
		</MudItem>
	</MudGrid>
</footer>

@code {
    [CascadingParameter]
    public Localizer Loc { get; set; }

    [Parameter]
    public EventCallback OnNext { get; set; }
    [Parameter]
    public EventCallback OnBack { get; set; }

    public RegisterFormData FormData { get; private set; } = new();

    private MudForm visitorForm;

#if DEBUG
    protected override void OnInitialized()
    {
        FormData.FirstName = "Test";
        FormData.LastName = "Test";
        FormData.PhoneNumber = "1234";
        FormData.Company = "Test";
        FormData.ContactPerson = "Test";
        base.OnInitialized();
    }
#endif

    private async void Validate()
    {
        visitorForm.ResetValidation();
        await visitorForm.Validate();
        if (visitorForm.IsValid)
        {
            await OnNext.InvokeAsync();
        }
        StateHasChanged();
    }

    public void Reset()
    {
        visitorForm.Reset();
        visitorForm.ResetValidation();
    }
}
