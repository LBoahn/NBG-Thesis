<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>Visitor badge
Please wear your visitor badge clearly visible at all times.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>Warning of high voltage
In these areas, dangerous electrical voltages can lead to injuries or even death.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>No trespassing
Signs mark areas that nust not be entered.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>Photography and filming prohibited
Photography and filming is prohibited on the entire premises. Exceptions only after consulation with the management or the responsible person.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Smoking is prohibited
Smoking is prohibited on the entire premises except in the designated areas.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>No naked flame, fire, ignition source prohibited
Handling of open flames, fire and sources of ignition are strictly forbidden.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>Pacemakers prohibited
Please observe the access ban for persons with pacemakers.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String16" xml:space="preserve">
    <value>No touching
Touching machines, tools and materials is prohibited without express permission.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String17" xml:space="preserve">
    <value>Hot work
For any hot work (welding, cutting, soldering, svarfing, cut-off grinding) a certificate of approval must be applied for.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String18" xml:space="preserve">
    <value>Health hazard
In areas with danger isgn the skin or eyes can be irritated or allergies can be triggered.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String19" xml:space="preserve">
    <value>Serious health hazard
Areas with this danger sign indicate possible serious damage to health.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Visitor registration or deregistration

_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String20" xml:space="preserve">
    <value>Corrosive
In areas with this danger sign, severe skin etching, severe eye damage can occur.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Travel speed
The maximum permitted speed is 20 km/h on the entire premises.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Meeting place
Find out more about the meeting places.
_content/NBG.Visitor.Blazor/images/safetyicons/meeting_place.png</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Escape routes and emergency exits
Find out about escape routes and emergency exits.
_content/NBG.Visitor.Blazor/images/safetyicons/emergency_exit.png</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Clean room
Unauthorized persons are strictly forbidden to enter. All means of access are secured.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Warning of laser beam
Make sure that the safety regulations are observed.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>Warning of explosive atmosphere
Make sure that the safety regulations are observed.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Warning of industrial trucks
Give priority to transport vehicles and use the pavements priovided.
_content/NBG.Visitor.Blazor/images/safetyicons/sample.png</value>
  </data>
</root>