@inherits LayoutComponentBase
@using MudBlazor;
@using NBG.Visitor.Blazor
@using System.Globalization
@using System.Reflection

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<style>
    #LangButton * {
        color:white !important;
    }
</style>

<div class="page">

    <div class="main">
        <MudAppBar Class="red darken-4" Fixed="false" Dense=@dense Elevation="5">
            <img src="/img/Logo/nbg_logo.png" style="max-height:80%; margin-right:20px;"/>
            @*<NavLink href="terminal">
                <MudButton Class="red-text text-lighten-5" Icon="@Icons.Material.Filled.ConnectWithoutContact">Visitor Registration</MudButton>
            </NavLink>   
            <NavLink href="visitors">
                <MudButton Class="red-text text-lighten-5" Icon="@Icons.Material.Filled.EditNote" >Visitor Administration</MudButton>
            </NavLink>*@
            <MudSpacer></MudSpacer>

            <MudMenu id="LangButton" Label="@Loc["LangShort"]" Class="mr-5" StartIcon="@Icons.Filled.Language" Dense="true">
                <MudMenuItem OnClick=@(() => ChangeLang("de-DE")) Style="height:24px;"><MudText>German</MudText></MudMenuItem>
                <MudMenuItem OnClick=@(() => ChangeLang("en-US")) Style="height:24px;"><MudText>English</MudText></MudMenuItem>
            </MudMenu>

            <form method="get" action="logout">
                <button type="submit" class="nav-link btn btn-link" id="logoutBtn">@Loc["LogOut"]</button>
            </form>
        </MudAppBar>
        <CascadingValue Value="Loc">
            <div class="content">
                @Body
            </div>
        </CascadingValue>
    </div>
</div>

@code{
    private Localizer Loc = new("NBG.Visitor.Resources.Language", Assembly.GetExecutingAssembly(), "de-DE");
    private bool dense = true;

    protected override async Task OnInitializedAsync()
    {
    }

    public void ChangeLang(string to)
    {
        Loc.Culture = new(to);
        StateHasChanged();
    }
}